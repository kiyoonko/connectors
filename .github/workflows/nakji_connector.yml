name: Nakji Connector

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '.github/workflows/nakji_connector.yml'
  pull_request:
    branches: [ none ]
    paths:
      - '**'

defaults:
  run:
    shell: bash

jobs:
  # https://tomasvotruba.com/blog/2020/11/16/how-to-make-dynamic-matrix-in-github-actions/
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - uses: actions/checkout@v3
        # Run jobs.build for every directory
      - id: matrix
        run: |
          # can't only build by git diff because failed build means next commit won't have the right diffs
          CONNS=$(find . -type f -name 'manifest.yaml' | cut -d "/" -f 2) #has manifest.yaml
          echo "::set-output name=value::$(echo $CONNS | jq -R -s -c 'split("\n")[:-1]'))" # ls only directories that changed

  test:
    name: Testing Packages
    needs: [ setup ]

    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
        value: ${{fromJson(needs.setup.outputs.matrix)}}

    runs-on: ${{ matrix.os }}
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Go Mod
        working-directory: ${{ matrix.value }}
        run: |
          go mod tidy -compat=1.17

      - name: Tests
        working-directory: ${{ matrix.value }}
        run: |
          go test ./...

  build:
    needs: [ setup, test ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}

    # Add "id-token" with the intended permissions. Required with google-github-actions/auth.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Run read-yaml action
      id: yaml-data
      uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
      with:
        file: '${{matrix.value}}/manifest.yaml'          # File to read from
        key-path: '["version"]' # Access the runs key then the using key and retuns the value.

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ secrets.DOCKER_REPO }}/${{ matrix.value }}-connector
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          # output 0.1.2
          type=semver,pattern={{version}},value=${{ steps.yaml-data.outputs.data }}
          # output 0.1
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.yaml-data.outputs.data }}
          # disabled if major zero
          type=semver,pattern={{major}},enable=${{ !startsWith(steps.yaml-data.outputs.data, '0.') }}
        labels: |
          org.opencontainers.image.title=${{ matrix.value }}-connector
          org.opencontainers.image.description=

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - uses: 'docker/login-action@v1'
      with:
        registry:  ${{ secrets.DOCKER_REPO }}
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Login to google Container Registry
      run: |-
        echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin ${{ secrets.DOCKER_REPO }}

    - name: Build and push
      uses: docker/build-push-action@v2
      env:
        BRANCH: ${{ env.GITHUB_REF_SLUG }}
      with:
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          BUILD=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
        context: ${{ matrix.value }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: 'C03DL2A73SB' #devops-alerts
        # For posting a simple plain text message
        slack-message: "GitHub Action build result: *${{ job.status }}* <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|${{ github.sha }}>\n---\n\n${{ steps.meta.outputs.tags }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

